apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: ui
    tier: frontend
spec:
  # here we select the number of pods we wish to start and the selector that tells our replica set which pods it needs
  #  to manage
  replicas: 3
  strategy:
    type: Recreate
  selector:  # Using the selector we tell our replicaset which pods to manage
    matchLabels:
      tier: frontend
  template:   # here we define our PODS Specs (k8s uses go template in the background)
    metadata:
      labels:
        tier: frontend
    spec:
            # affinity:
            # nodeAffinity:
            # requiredDuringSchedulingIgnoredDuringExecution:
            # nodeSelectorTerms:
            # - matchExpressions:
            # - key: topology.kubernetes.io/zone
            # operator: In
            # values:
            # - eu-west-1b
            # - eu-west-1c
            # preferredDuringSchedulingIgnoredDuringExecution:
            # - weight: 1
            # preference:
            # matchExpressions:
            # - key: node.kubernetes.io/instance-type
            # operator: In
            # values:
            # - t3.large
            # podAffinity:
            # requiredDuringSchedulingIgnoredDuringExecution:
            # - labelSelector:
            # matchExpressions:
            # - key: cache
            # operator: In
            # values:
            # - redis
            # topologyKey: topology.kubernetes.io/zone
            # podAntiAffinity:
            # requiredDuringSchedulingIgnoredDuringExecution:
            # - labelSelector:
            # matchExpressions:
            # - key: tier
            # operator: In
            # values:
            # - frontend
            # topologyKey: topology.kubernetes.io/zone
      containers:
        - name: spring-music
          image: "nginx:latest"

---

## THIS will start a redis pod as part of the example and affinity rule above
apiVersion: v1
kind: Pod
metadata:
  name: redis-cache
  labels:
    cache: redis
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: topology.kubernetes.io/zone
            operator: In
            values:
            - eu-west-1b
            - eu-west-1c
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
          - key: node.kubernetes.io/instance-type
            operator: In
            values:
            - t3.large
  containers:
  - name: redis
    image: redis:latest
